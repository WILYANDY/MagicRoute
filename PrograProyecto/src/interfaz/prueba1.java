/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

/**
 *
 * @author Christian Collaguazo
 */
import java.awt.Dimension;
import java.awt.Image;
import java.io.UnsupportedEncodingException;
import java.net.MalformedURLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import maps.java.StaticMaps;
import Logica.*;
import java.awt.*;
import maps.java.StreetView;
import com.sun.awt.AWTUtilities;

import java.awt.Shape;
import java.awt.event.ItemEvent;

import java.awt.geom.RoundRectangle2D;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import javax.swing.*;
public class prueba1 extends javax.swing.JFrame {

    /**
     * Creates new form prueba1
     */
   int zoom=14; 
   int cont = 1;
    int cont1 = 0;
    int cont2 = 0;
    int cont3 = 0;
    int cont4 = 0;
    int gra = 0;
    String markers1 = ("&markers=color:yellow%7Clabel:1%7C-2.889659,-79.023468");
    
        
    ImageIcon visor[] = new ImageIcon[7];
    
    public prueba1() {
        initComponents();
        this.setLocationRelativeTo(null);
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tittleRuta = new javax.swing.JToggleButton();
        jSeparator1 = new javax.swing.JSeparator();
        tittleRuta1 = new javax.swing.JToggleButton();
        tittleEscojaRuta = new javax.swing.JToggleButton();
        jComboBox1 = new javax.swing.JComboBox();
        tittleLugar = new javax.swing.JButton();
        ZoomMenos = new javax.swing.JButton();
        ZoomMas = new javax.swing.JButton();
        iz = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox();
        botonVerMapa = new javax.swing.JButton();
        SimularRecorido = new javax.swing.JButton();
        BotonPuntoAnterior = new javax.swing.JButton();
        BotonSiguientePunto = new javax.swing.JButton();
        BotonAntIm = new javax.swing.JButton();
        BotonSiguienteIm = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        streetviewtitulo = new javax.swing.JToggleButton();
        de = new javax.swing.JButton();
        botonsalir = new javax.swing.JButton();
        labelbarra = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        botonVerStreetView = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        BotonRuta = new javax.swing.JButton();
        BotonVideo = new javax.swing.JButton();
        visorImagenes = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        fondomapa = new javax.swing.JLabel();
        fondo1 = new javax.swing.JLabel();

        tittleRuta.setBackground(new java.awt.Color(204, 204, 204));
        tittleRuta.setFont(new java.awt.Font("AR JULIAN", 0, 15)); // NOI18N
        tittleRuta.setText("RUTAS");
        tittleRuta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        tittleRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tittleRutaActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tittleRuta1.setBackground(new java.awt.Color(204, 204, 204));
        tittleRuta1.setFont(new java.awt.Font("AR JULIAN", 0, 14)); // NOI18N
        tittleRuta1.setText("RUTAS");
        tittleRuta1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        tittleRuta1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tittleRuta1ActionPerformed(evt);
            }
        });
        getContentPane().add(tittleRuta1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 260, 40));

        tittleEscojaRuta.setBackground(new java.awt.Color(204, 204, 204));
        tittleEscojaRuta.setFont(new java.awt.Font("Calisto MT", 0, 15)); // NOI18N
        tittleEscojaRuta.setText("Escoja una Ruta");
        tittleEscojaRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tittleEscojaRutaActionPerformed(evt);
            }
        });
        getContentPane().add(tittleEscojaRuta, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 260, 40));

        jComboBox1.setBackground(new java.awt.Color(102, 204, 255));
        jComboBox1.setFont(new java.awt.Font("Book Antiqua", 0, 15)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Catedrales-Iglesias", "Parques", "Museos", "Especial" }));
        jComboBox1.setToolTipText("");
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 260, 40));

        tittleLugar.setBackground(new java.awt.Color(204, 204, 204));
        tittleLugar.setFont(new java.awt.Font("AR JULIAN", 0, 14)); // NOI18N
        tittleLugar.setText("lugares de la ruta");
        tittleLugar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        getContentPane().add(tittleLugar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 260, 40));

        ZoomMenos.setBackground(new java.awt.Color(255, 255, 255));
        ZoomMenos.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ZoomMenos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/zoommenos.jpg"))); // NOI18N
        ZoomMenos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        ZoomMenos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZoomMenosActionPerformed(evt);
            }
        });
        getContentPane().add(ZoomMenos, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 630, 50, 50));

        ZoomMas.setBackground(new java.awt.Color(255, 255, 255));
        ZoomMas.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ZoomMas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/zoommas.jpg"))); // NOI18N
        ZoomMas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        ZoomMas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZoomMasActionPerformed(evt);
            }
        });
        getContentPane().add(ZoomMas, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 570, 50, 50));

        iz.setBackground(new java.awt.Color(255, 255, 255));
        iz.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        iz.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/izquierda.jpg"))); // NOI18N
        iz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                izActionPerformed(evt);
            }
        });
        getContentPane().add(iz, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 300, 60, 60));

        jComboBox2.setBackground(new java.awt.Color(102, 204, 255));
        jComboBox2.setFont(new java.awt.Font("Book Antiqua", 0, 15)); // NOI18N
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, 260, 40));

        botonVerMapa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/106413.jpg"))); // NOI18N
        botonVerMapa.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        botonVerMapa.setPreferredSize(new java.awt.Dimension(500, 500));
        botonVerMapa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVerMapaActionPerformed(evt);
            }
        });
        getContentPane().add(botonVerMapa, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 100, 630, 590));

        SimularRecorido.setFont(new java.awt.Font("Book Antiqua", 0, 12)); // NOI18N
        SimularRecorido.setText("Simular Recorrido");
        SimularRecorido.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        SimularRecorido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SimularRecoridoActionPerformed(evt);
            }
        });
        getContentPane().add(SimularRecorido, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 700, 160, 30));

        BotonPuntoAnterior.setFont(new java.awt.Font("Book Antiqua", 0, 12)); // NOI18N
        BotonPuntoAnterior.setText("Anterior Punto");
        BotonPuntoAnterior.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        BotonPuntoAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonPuntoAnteriorActionPerformed(evt);
            }
        });
        getContentPane().add(BotonPuntoAnterior, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 700, 100, 30));

        BotonSiguientePunto.setFont(new java.awt.Font("Book Antiqua", 0, 12)); // NOI18N
        BotonSiguientePunto.setText("Siguiente Punto");
        BotonSiguientePunto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        BotonSiguientePunto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonSiguientePuntoActionPerformed(evt);
            }
        });
        getContentPane().add(BotonSiguientePunto, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 700, 100, 30));

        BotonAntIm.setFont(new java.awt.Font("Book Antiqua", 0, 12)); // NOI18N
        BotonAntIm.setText("Anterior");
        BotonAntIm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        BotonAntIm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAntImActionPerformed(evt);
            }
        });
        getContentPane().add(BotonAntIm, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 700, 90, 30));

        BotonSiguienteIm.setFont(new java.awt.Font("Book Antiqua", 0, 12)); // NOI18N
        BotonSiguienteIm.setText("Siguiente");
        BotonSiguienteIm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        BotonSiguienteIm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonSiguienteImActionPerformed(evt);
            }
        });
        getContentPane().add(BotonSiguienteIm, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 700, 90, 30));

        jButton2.setBackground(new java.awt.Color(204, 204, 204));
        jButton2.setFont(new java.awt.Font("AR JULIAN", 0, 14)); // NOI18N
        jButton2.setText("VISOR DE IMAGENES");
        jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 370, 370, 40));

        streetviewtitulo.setBackground(new java.awt.Color(204, 204, 204));
        streetviewtitulo.setFont(new java.awt.Font("AR JULIAN", 0, 14)); // NOI18N
        streetviewtitulo.setText("Street view");
        streetviewtitulo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        streetviewtitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                streetviewtituloActionPerformed(evt);
            }
        });
        getContentPane().add(streetviewtitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 50, 370, 40));

        de.setBackground(new java.awt.Color(255, 255, 255));
        de.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        de.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/derecha.jpg"))); // NOI18N
        de.setMaximumSize(new java.awt.Dimension(839, 729));
        de.setMinimumSize(new java.awt.Dimension(839, 729));
        de.setPreferredSize(new java.awt.Dimension(839, 729));
        de.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deActionPerformed(evt);
            }
        });
        getContentPane().add(de, new org.netbeans.lib.awtextra.AbsoluteConstraints(1250, 300, 60, 60));

        botonsalir.setBackground(new java.awt.Color(255, 0, 0));
        botonsalir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        botonsalir.setForeground(new java.awt.Color(255, 255, 255));
        botonsalir.setText("x");
        botonsalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonsalirActionPerformed(evt);
            }
        });
        getContentPane().add(botonsalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(1280, 0, 40, 30));

        labelbarra.setFont(new java.awt.Font("AR HERMANN", 0, 18)); // NOI18N
        labelbarra.setForeground(new java.awt.Color(255, 255, 255));
        labelbarra.setText("                                                            MAGIC ROUTE");
        getContentPane().add(labelbarra, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1320, 30));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/magicRoute.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 590, 260, 150));

        botonVerStreetView.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cuencaciudad.jpg"))); // NOI18N
        botonVerStreetView.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        botonVerStreetView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVerStreetViewActionPerformed(evt);
            }
        });
        getContentPane().add(botonVerStreetView, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 100, 370, 260));

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator2.setToolTipText("");
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 40, 30, 700));

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setFont(new java.awt.Font("AR JULIAN", 0, 15)); // NOI18N
        jButton1.setText("MAPA");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 50, 630, 40));

        BotonRuta.setFont(new java.awt.Font("Book Antiqua", 0, 12)); // NOI18N
        BotonRuta.setText("Ver Ruta");
        BotonRuta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        BotonRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRutaActionPerformed(evt);
            }
        });
        getContentPane().add(BotonRuta, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 700, 70, 30));

        BotonVideo.setFont(new java.awt.Font("Book Antiqua", 0, 12)); // NOI18N
        BotonVideo.setText("Ver Video - YOUTUBE");
        BotonVideo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonVideoActionPerformed(evt);
            }
        });
        getContentPane().add(BotonVideo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 550, -1, 30));

        visorImagenes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cuenca3.JPG"))); // NOI18N
        visorImagenes.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true));
        getContentPane().add(visorImagenes, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 420, 370, 270));

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setToolTipText("");
        getContentPane().add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 40, 30, 700));

        fondomapa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/75886.jpg"))); // NOI18N
        fondomapa.setText("jLabel1");
        getContentPane().add(fondomapa, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 1300, 720));

        fondo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondos-gris-este-fondo-de-pantalla-llamado-esta-archivado-en-la-s-categoria-1025187.jpg"))); // NOI18N
        fondo1.setText("jLabel1");
        getContentPane().add(fondo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1320, 760));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    
        
    private void tittleRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tittleRutaActionPerformed

    }//GEN-LAST:event_tittleRutaActionPerformed

    private void tittleRuta1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tittleRuta1ActionPerformed

    }//GEN-LAST:event_tittleRuta1ActionPerformed

    private void tittleEscojaRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tittleEscojaRutaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tittleEscojaRutaActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {

            this.jComboBox2.setModel(new DefaultComboBoxModel(this.getLugares(this.jComboBox1.getSelectedItem().toString())));

        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void botonVerMapaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVerMapaActionPerformed

        String Matriz[][];
        int op = jComboBox1.getSelectedIndex();
        if (op == 0) {
            Ruta ruta = new Ruta("C:\\Users\\USUARIO\\Desktop\\Poyecto Pogra3\\PrograProyecto\\src\\Datos\\ruta1.txt");
            Matriz = ruta.matrizRutas();
            String ubicacion;
            if (cont1 <= 25) {

                ubicacion = Matriz[cont1][0] + "," + Matriz[cont1][1];
                //System.out.println(ubicacion);
                StaticMap ObjStaticMaps = new StaticMap();
                Image imagenMapa;
                StreetView ObjStreet = new StreetView();
                try {
                    imagenMapa = ObjStaticMaps.getStaticMap(0,ubicacion,
                        zoom, new Dimension(630, 590),
                        1, StaticMaps.Format.png,
                        StaticMaps.Maptype.roadmap);
                    botonVerMapa.setIcon(new ImageIcon(imagenMapa));

                } catch (MalformedURLException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedEncodingException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            cont1++;
            if (cont1 == 25) {
                cont1 = 0;
            }
        } else if (op == 1) {
            Ruta ruta = new Ruta("C:\\Users\\USUARIO\\Desktop\\Poyecto Pogra3\\PrograProyecto\\src\\Datos\\ruta2.txt");
            Matriz = ruta.matrizRutas();
            String ubicacion;
            if (cont2 <= 25) {
                ubicacion = Matriz[cont2][0] + "," + Matriz[cont2][1];
                //System.out.println(ubicacion);
                StaticMap ObjStaticMaps = new StaticMap();
                Image imagenMapa;
                StreetView ObjStreet = new StreetView();
                try {
                    imagenMapa = ObjStaticMaps.getStaticMap(1,ubicacion,
                        zoom, new Dimension(630, 590),
                        1, StaticMaps.Format.png,
                        StaticMaps.Maptype.roadmap);
                    botonVerMapa.setIcon(new ImageIcon(imagenMapa));

                } catch (MalformedURLException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedEncodingException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            cont2++;
            if (cont2 == 25) {
                cont2 = 0;
            }
        } else if (op == 2) {
            Ruta ruta = new Ruta("C:\\Users\\USUARIO\\Desktop\\Poyecto Pogra3\\PrograProyecto\\src\\Datos\\ruta3.txt");
            Matriz = ruta.matrizRutas();
            String ubicacion;
            if (cont3 <= 25) {
                ubicacion = Matriz[cont3][0] + "," + Matriz[cont3][1];
                //System.out.println(ubicacion);
                StaticMap ObjStaticMaps = new StaticMap();
                Image imagenMapa;
                StreetView ObjStreet = new StreetView();
                try {
                    imagenMapa = ObjStaticMaps.getStaticMap(2,ubicacion,
                        zoom, new Dimension(630, 590),
                        1, StaticMaps.Format.png,
                        StaticMaps.Maptype.roadmap);
                    botonVerMapa.setIcon(new ImageIcon(imagenMapa));

                } catch (MalformedURLException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedEncodingException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            cont3++;
            if (cont3 == 25) {
                cont3 = 0;
            }
        } else if (op == 3) {
            Ruta ruta = new Ruta("C:\\Users\\USUARIO\\Desktop\\Poyecto Pogra3\\PrograProyecto\\src\\Datos\\ruta4.txt");
            Matriz = ruta.matrizRutas();
            String ubicacion;
            if (cont4 <= 25) {
                ubicacion = Matriz[cont4][0] + "," + Matriz[cont4][1];
                //System.out.println(ubicacion);
                StaticMap ObjStaticMaps = new StaticMap();
                Image imagenMapa;
                StreetView ObjStreet = new StreetView();
                try {
                    imagenMapa = ObjStaticMaps.getStaticMap(3,ubicacion,
                        zoom, new Dimension(630, 590),
                        1, StaticMaps.Format.png,
                        StaticMaps.Maptype.roadmap);
                    botonVerMapa.setIcon(new ImageIcon(imagenMapa));

                } catch (MalformedURLException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedEncodingException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            cont4++;
            if (cont4 == 25) {
                cont4 = 0;
            }
        }

        //System.out.println("hola ");
        // TODO add your handling code here:
    }//GEN-LAST:event_botonVerMapaActionPerformed

    private void SimularRecoridoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SimularRecoridoActionPerformed
        // TODO add your handling code here:
        cont1 = 0;
        cont2 = 0;
        cont3 = 0;
        cont4 = 0;
        for (int i = 0; i < 25; i++) {
            botonVerMapa.doClick(100);
            // botonVerStreetView.doClick();

        }        // TODO add your handling code here:
    }//GEN-LAST:event_SimularRecoridoActionPerformed

    private void BotonPuntoAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonPuntoAnteriorActionPerformed

        String Matriz[][];
        int op = jComboBox1.getSelectedIndex();
        if (op == 0) {
            if (cont1 > 0) {
                Ruta ruta = new Ruta("C:\\Users\\USUARIO\\Desktop\\Poyecto Pogra3\\PrograProyecto\\src\\Datos\\ruta1.txt");
                Matriz = ruta.matrizRutas();
                String ubicacion;
                cont1--;
                if (cont1 <= 25) {
                    ubicacion = Matriz[cont1][0] + "," + Matriz[cont1][1];
                    //System.out.println(ubicacion);
                    StaticMap ObjStaticMaps = new StaticMap();
                    Image imagenMapa;
                    StreetView ObjStreet = new StreetView();
                    try {
                        imagenMapa = ObjStaticMaps.getStaticMap(0,ubicacion,
                            zoom, new Dimension(630, 590),
                            1, StaticMaps.Format.png,
                            StaticMaps.Maptype.roadmap);
                        botonVerMapa.setIcon(new ImageIcon(imagenMapa));
                        Image imgResultado = ObjStreet.getStreetView(ubicacion, new Dimension(370, 260), gra, 100, -100);
                        botonVerStreetView.setIcon(new ImageIcon(imgResultado));

                    } catch (MalformedURLException ex) {
                        Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (UnsupportedEncodingException ex) {
                        Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        } else if (op == 1) {
            if (cont2 > 0) {
                Ruta ruta = new Ruta("C:\\Users\\USUARIO\\Desktop\\Poyecto Pogra3\\PrograProyecto\\src\\Datos\\ruta2.txt");
                Matriz = ruta.matrizRutas();
                String ubicacion;
                cont2--;
                if (cont2 <= 25) {
                    ubicacion = Matriz[cont2][0] + "," + Matriz[cont2][1];
                    //System.out.println(ubicacion);
                    StaticMap ObjStaticMaps = new StaticMap();
                    Image imagenMapa;
                    StreetView ObjStreet = new StreetView();
                    try {
                        imagenMapa = ObjStaticMaps.getStaticMap(1,ubicacion,
                            zoom, new Dimension(630, 590),
                            1, StaticMaps.Format.png,
                            StaticMaps.Maptype.roadmap);
                        botonVerMapa.setIcon(new ImageIcon(imagenMapa));
                        Image imgResultado = ObjStreet.getStreetView(ubicacion, new Dimension(370, 260), gra, 100, -100);
                        botonVerStreetView.setIcon(new ImageIcon(imgResultado));

                    } catch (MalformedURLException ex) {
                        Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (UnsupportedEncodingException ex) {
                        Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        } else if (op == 2) {
            if (cont3 > 0) {
                Ruta ruta = new Ruta("C:\\Users\\USUARIO\\Desktop\\Poyecto Pogra3\\PrograProyecto\\src\\Datos\\ruta3.txt");
                Matriz = ruta.matrizRutas();
                String ubicacion;
                cont3--;
                if (cont3 <= 25) {
                    ubicacion = Matriz[cont3][0] + "," + Matriz[cont3][1];
                    //System.out.println(ubicacion);
                    StaticMap ObjStaticMaps = new StaticMap();
                    Image imagenMapa;
                    StreetView ObjStreet = new StreetView();
                    try {
                        imagenMapa = ObjStaticMaps.getStaticMap(2,ubicacion,
                            zoom, new Dimension(630, 590),
                            1, StaticMaps.Format.png,
                            StaticMaps.Maptype.roadmap);
                        botonVerMapa.setIcon(new ImageIcon(imagenMapa));
                        Image imgResultado = ObjStreet.getStreetView(ubicacion, new Dimension(370, 260), gra, 100, -100);
                        botonVerStreetView.setIcon(new ImageIcon(imgResultado));

                    } catch (MalformedURLException ex) {
                        Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (UnsupportedEncodingException ex) {
                        Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        } else if (op == 3) {
            if (cont4 > 0) {
                Ruta ruta = new Ruta("C:\\Users\\USUARIO\\Desktop\\Poyecto Pogra3\\PrograProyecto\\src\\Datos\\ruta4.txt");
                Matriz = ruta.matrizRutas();
                String ubicacion;
                cont4--;
                if (cont4 <= 25) {
                    ubicacion = Matriz[cont4][0] + "," + Matriz[cont4][1];
                    //System.out.println(ubicacion);
                    StaticMap ObjStaticMaps = new StaticMap();
                    Image imagenMapa;
                    StreetView ObjStreet = new StreetView();
                    try {
                        imagenMapa = ObjStaticMaps.getStaticMap(3,ubicacion,
                            zoom, new Dimension(630, 590),
                            1, StaticMaps.Format.png,
                            StaticMaps.Maptype.roadmap);
                        botonVerMapa.setIcon(new ImageIcon(imagenMapa));
                        Image imgResultado = ObjStreet.getStreetView(ubicacion, new Dimension(370, 260), gra, 100, -100);
                        botonVerStreetView.setIcon(new ImageIcon(imgResultado));

                    } catch (MalformedURLException ex) {
                        Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (UnsupportedEncodingException ex) {
                        Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }
    }//GEN-LAST:event_BotonPuntoAnteriorActionPerformed

    private void BotonSiguientePuntoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonSiguientePuntoActionPerformed
        String Matriz[][];
        int op = jComboBox1.getSelectedIndex();
        if (op == 0) {
            Ruta ruta = new Ruta("C:\\Users\\USUARIO\\Desktop\\Poyecto Pogra3\\PrograProyecto\\src\\Datos\\ruta1.txt");
            Matriz = ruta.matrizRutas();
            String ubicacion;
            if (cont1 <= 25) {
                ubicacion = Matriz[cont1][0] + "," + Matriz[cont1][1];
                //System.out.println(ubicacion);
                StaticMap ObjStaticMaps = new StaticMap();
                Image imagenMapa;
                StreetView ObjStreet = new StreetView();
                try {
                    imagenMapa = ObjStaticMaps.getStaticMap(0,ubicacion,
                        zoom, new Dimension(630, 590),
                        1, StaticMaps.Format.png,
                        StaticMaps.Maptype.roadmap);
                    botonVerMapa.setIcon(new ImageIcon(imagenMapa));
                    Image imgResultado = ObjStreet.getStreetView(ubicacion, new Dimension(370, 260), gra, 100, -100);
                    botonVerStreetView.setIcon(new ImageIcon(imgResultado));

                } catch (MalformedURLException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedEncodingException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            cont1++;
            if (cont1 == 25) {
                cont1 = 0;
            }
        } else if (op == 1) {
            Ruta ruta = new Ruta("C:\\Users\\USUARIO\\Desktop\\Poyecto Pogra3\\PrograProyecto\\src\\Datos\\ruta2.txt");
            Matriz = ruta.matrizRutas();
            String ubicacion;
            if (cont2 <= 25) {
                ubicacion = Matriz[cont2][0] + "," + Matriz[cont2][1];
                //System.out.println(ubicacion);
                StaticMap ObjStaticMaps = new StaticMap();
                Image imagenMapa;
                StreetView ObjStreet = new StreetView();
                try {
                    imagenMapa = ObjStaticMaps.getStaticMap(1,ubicacion,
                        zoom, new Dimension(630, 590),
                        1, StaticMaps.Format.png,
                        StaticMaps.Maptype.roadmap);
                    botonVerMapa.setIcon(new ImageIcon(imagenMapa));
                    Image imgResultado = ObjStreet.getStreetView(ubicacion, new Dimension(370, 260), gra, 100, -100);
                    botonVerStreetView.setIcon(new ImageIcon(imgResultado));

                } catch (MalformedURLException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedEncodingException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            cont2++;
            if (cont2 == 25) {
                cont2 = 0;
            }
        } else if (op == 2) {
            Ruta ruta = new Ruta("C:\\Users\\USUARIO\\Desktop\\Poyecto Pogra3\\PrograProyecto\\src\\Datos\\ruta3.txt");
            Matriz = ruta.matrizRutas();
            String ubicacion;
            if (cont3 <= 25) {
                ubicacion = Matriz[cont3][0] + "," + Matriz[cont3][1];
                //System.out.println(ubicacion);
                StaticMap ObjStaticMaps = new StaticMap();
                Image imagenMapa;
                StreetView ObjStreet = new StreetView();
                try {
                    imagenMapa = ObjStaticMaps.getStaticMap(2,ubicacion,
                        zoom, new Dimension(630, 590),
                        1, StaticMaps.Format.png,
                        StaticMaps.Maptype.roadmap);
                    botonVerMapa.setIcon(new ImageIcon(imagenMapa));
                    Image imgResultado = ObjStreet.getStreetView(ubicacion, new Dimension(370, 260), gra, 100, -100);
                    botonVerStreetView.setIcon(new ImageIcon(imgResultado));

                } catch (MalformedURLException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedEncodingException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            cont3++;
            if (cont3 == 25) {
                cont3 = 0;
            }
        } else if (op == 3) {
            Ruta ruta = new Ruta("C:\\Users\\USUARIO\\Desktop\\Poyecto Pogra3\\PrograProyecto\\src\\Datos\\ruta4.txt");
            Matriz = ruta.matrizRutas();
            String ubicacion;
            if (cont4 <= 25) {
                ubicacion = Matriz[cont4][0] + "," + Matriz[cont4][1];
                //System.out.println(ubicacion);
                StaticMap ObjStaticMaps = new StaticMap();
                Image imagenMapa;
                StreetView ObjStreet = new StreetView();
                try {
                    imagenMapa = ObjStaticMaps.getStaticMap(3,ubicacion,
                        zoom, new Dimension(630, 590),
                        1, StaticMaps.Format.png,
                        StaticMaps.Maptype.roadmap);
                    botonVerMapa.setIcon(new ImageIcon(imagenMapa));
                    Image imgResultado = ObjStreet.getStreetView(ubicacion, new Dimension(370, 260), gra, 100, -100);
                    botonVerStreetView.setIcon(new ImageIcon(imgResultado));

                } catch (MalformedURLException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedEncodingException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            cont4++;
            if (cont4 == 25) {
                cont4 = 0;
            }
        }
        //System.out.println("hola ");

        // TODO add your handling code here:
    }//GEN-LAST:event_BotonSiguientePuntoActionPerformed

    private void BotonAntImActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAntImActionPerformed
        int op  =  jComboBox1.getSelectedIndex();
        int  op2 = 0;
        if (op == 0) {
            op2 = jComboBox2.getSelectedIndex();
            System.out.println(op2);
            if (op2 == 0) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/francisco" + i + ".jpg"));
                }
            } else if (op2 == 1) {
                 
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/inmaculada" + i + ".jpg"));
                }
            } else if (op2 == 2) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/vieja" + i + ".jpg"));
                }
            } else if (op2 == 3) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/blas" + i + ".jpg"));
                }
            } else if (op2 == 4) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/santos" + i + ".jpg"));
                }
            }

        } else if (op == 1) {
            op2 = jComboBox2.getSelectedIndex();
            
            if (op2 == 0) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/miraflores" + i + ".jpg"));
                }
            } else if (op2 == 1) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/sanblas" + i + ".jpg"));
                }
            } else if (op2 == 2) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/calderon" + i + ".jpg"));
                }
            } else if (op2 == 3) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/madre" + i + ".jpg"));
                }
            } else if (op2 == 4) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/paraiso" + i + ".jpg"));
                }
            }

        } else if (op == 2) {
            op2 = jComboBox2.getSelectedIndex();

            if (op2 == 0) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/medicina" + i + ".jpg"));
                }
            } else if (op2 == 1) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/remigio" + i + ".jpg"));
                }
            } else if (op2 == 2) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/aborigen" + i + ".jpg"));
                }
            } else if (op2 == 3) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/manuel" + i + ".jpg"));
                }
            } else if (op2 == 4) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/puma" + i + ".jpg"));
                }
            }

        } else if (op == 3) {
            op2 = jComboBox2.getSelectedIndex();

            if (op2 == 0) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/ruinasanto" + i + ".jpg"));
                }
            } else if (op2 == 1) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/pumapungo" + i + ".jpg"));
                }
            } else if (op2 == 2) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/amaru" + i + ".jpg"));
                }
            } else if (op2 == 3) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/turi" + i + ".jpg"));
                }
            } else if (op2 == 4) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/cajas" + i + ".jpg"));
                }
            }

        }
        if(cont==1){
            cont = 6;
        }
        cont--;
        visorImagenes.setIcon(visor[cont]); 
        // TODO add your handling code here:
    }//GEN-LAST:event_BotonAntImActionPerformed

    private void BotonSiguienteImActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonSiguienteImActionPerformed
        // TODO add your handling code here:
        int op  =  jComboBox1.getSelectedIndex();
        int  op2 = 0;
        if (op == 0) {
            op2 = jComboBox2.getSelectedIndex();
            System.out.println(op2);
            if (op2 == 0) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/francisco" + i + ".jpg"));
                }
            } else if (op2 == 1) {
                 
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/inmaculada" + i + ".jpg"));
                }
            } else if (op2 == 2) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/vieja" + i + ".jpg"));
                }
            } else if (op2 == 3) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/blas" + i + ".jpg"));
                }
            } else if (op2 == 4) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/santos" + i + ".jpg"));
                }
            }

        } else if (op == 1) {
            op2 = jComboBox2.getSelectedIndex();
            
            if (op2 == 0) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/miraflores" + i + ".jpg"));
                }
            } else if (op2 == 1) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/sanblas" + i + ".jpg"));
                }
            } else if (op2 == 2) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/calderon" + i + ".jpg"));
                }
            } else if (op2 == 3) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/madre" + i + ".jpg"));
                }
            } else if (op2 == 4) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/paraiso" + i + ".jpg"));
                }
            }

        } else if (op == 2) {
            op2 = jComboBox2.getSelectedIndex();

            if (op2 == 0) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/medicina" + i + ".jpg"));
                }
            } else if (op2 == 1) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/remigio" + i + ".jpg"));
                }
            } else if (op2 == 2) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/aborigen" + i + ".jpg"));
                }
            } else if (op2 == 3) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/manuel" + i + ".jpg"));
                }
            } else if (op2 == 4) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/puma" + i + ".jpg"));
                }
            }

        } else if (op == 3) {
            op2 = jComboBox2.getSelectedIndex();

            if (op2 == 0) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/ruinasanto" + i + ".jpg"));
                }
            } else if (op2 == 1) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/pumapungo" + i + ".jpg"));
                }
            } else if (op2 == 2) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/amaru" + i + ".jpg"));
                }
            } else if (op2 == 3) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/turi" + i + ".jpg"));
                }
            } else if (op2 == 4) {
                for (int i = 1; i < 6; i++) {
                    visor[i] = new ImageIcon(getClass().getResource("/ImagenesLugares/cajas" + i + ".jpg"));
                }
            }

        }

        if (cont == 5){
        cont=0;
        }
        cont++; 
        visorImagenes.setIcon(visor[cont]);
        
    
    }//GEN-LAST:event_BotonSiguienteImActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void botonVerStreetViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVerStreetViewActionPerformed
        // TODO add your handling code here:
        String Matriz[][];
        int op = jComboBox1.getSelectedIndex();
        if (op == 0) {
            Ruta ruta = new Ruta("C:\\Users\\USUARIO\\Desktop\\Poyecto Pogra3\\PrograProyecto\\src\\Datos\\ruta1.txt");
            Matriz = ruta.matrizRutas();
            String ubicacion;
            ubicacion = Matriz[cont1 - 1][0] + "," + Matriz[cont1 - 1][1];
            StreetView ObjStreet = new StreetView();
            if (gra < 0) {
                gra = 360;
            } else if (gra > 360) {
                gra = 0;
            }
            try {
                Image imgResultado = ObjStreet.getStreetView(ubicacion, new Dimension(370, 260), gra, 100, -100);
                botonVerStreetView.setIcon(new ImageIcon(imgResultado));

            } catch (Exception e) {
            }
        }
        if (op == 1) {
            Ruta ruta = new Ruta("C:\\Users\\USUARIO\\Desktop\\Poyecto Pogra3\\PrograProyecto\\src\\Datos\\ruta2.txt");
            Matriz = ruta.matrizRutas();
            String ubicacion;
            ubicacion = Matriz[cont2 - 1][0] + "," + Matriz[cont2 - 1][1];
            StreetView ObjStreet = new StreetView();
            if (gra < 0) {
                gra = 360;
            } else if (gra > 360) {
                gra = 0;
            }
            try {
                Image imgResultado = ObjStreet.getStreetView(ubicacion, new Dimension(370, 260), gra, 100, -100);
                botonVerStreetView.setIcon(new ImageIcon(imgResultado));

            } catch (Exception e) {
            }
        }
        if (op == 2) {
            Ruta ruta = new Ruta("C:\\Users\\USUARIO\\Desktop\\Poyecto Pogra3\\PrograProyecto\\src\\Datos\\ruta3.txt");
            Matriz = ruta.matrizRutas();
            String ubicacion;
            ubicacion = Matriz[cont3 - 1][0] + "," + Matriz[cont3 - 1][1];
            StreetView ObjStreet = new StreetView();
            if (gra < 0) {
                gra = 360;
            } else if (gra > 360) {
                gra = 0;
            }
            try {
                Image imgResultado = ObjStreet.getStreetView(ubicacion, new Dimension(370, 260), gra, 100, -100);
                botonVerStreetView.setIcon(new ImageIcon(imgResultado));

            } catch (Exception e) {
            }
        } else if (op == 3) {
            Ruta ruta = new Ruta("C:\\Users\\USUARIO\\Desktop\\Poyecto Pogra3\\PrograProyecto\\src\\Datos\\ruta4.txt");
            Matriz = ruta.matrizRutas();
            String ubicacion;
            ubicacion = Matriz[cont4 - 1][0] + "," + Matriz[cont4 - 1][1];
            StreetView ObjStreet = new StreetView();
            if (gra < 0) {
                gra = 360;
            } else if (gra > 360) {
                gra = 0;
            }
            try {
                Image imgResultado = ObjStreet.getStreetView(ubicacion, new Dimension(370, 260), gra, 100, -100);
                botonVerStreetView.setIcon(new ImageIcon(imgResultado));

            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_botonVerStreetViewActionPerformed

    private void streetviewtituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_streetviewtituloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_streetviewtituloActionPerformed

    private void izActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_izActionPerformed
        // TODO add your handling code here:
        String Matriz[][];
        int op = jComboBox1.getSelectedIndex();
        if (op == 0 && cont1 > -1) {
            Ruta ruta = new Ruta("C:\\Users\\USUARIO\\Desktop\\Poyecto Pogra3\\PrograProyecto\\src\\Datos\\ruta1.txt");
            Matriz = ruta.matrizRutas();
            String ubicacion;
            ubicacion = Matriz[cont1 - 1][0] + "," + Matriz[cont1 - 1][1];
            StreetView ObjStreet = new StreetView();
            gra -= 15;
            if (gra < 0) {
                gra = 360;
            }
            try {
                Image imgResultado = ObjStreet.getStreetView(ubicacion, new Dimension(370, 260), gra, 100, -100);
                botonVerStreetView.setIcon(new ImageIcon(imgResultado));

            } catch (Exception e) {
            }

        } else if (op == 1 && cont2 > -1) {
            Ruta ruta = new Ruta("C:\\Users\\USUARIO\\Desktop\\Poyecto Pogra3\\PrograProyecto\\src\\Datos\\ruta2.txt");
            Matriz = ruta.matrizRutas();
            String ubicacion;
            ubicacion = Matriz[cont2 - 1][0] + "," + Matriz[cont2 - 1][1];
            StreetView ObjStreet = new StreetView();
            gra -= 15;
            if (gra < 0) {
                gra = 360;
            }
            try {
                Image imgResultado = ObjStreet.getStreetView(ubicacion, new Dimension(370, 260), gra, 100, -100);
                botonVerStreetView.setIcon(new ImageIcon(imgResultado));

            } catch (Exception e) {
            }

        } else if (op == 2 && cont3 > -1) {
            Ruta ruta = new Ruta("C:\\Users\\USUARIO\\Desktop\\Poyecto Pogra3\\PrograProyecto\\src\\Datos\\ruta3.txt");
            Matriz = ruta.matrizRutas();
            String ubicacion;
            ubicacion = Matriz[cont3 - 1][0] + "," + Matriz[cont3 - 1][1];
            StreetView ObjStreet = new StreetView();
            gra -= 15;
            if (gra < 0) {
                gra = 360;
            }
            try {
                Image imgResultado = ObjStreet.getStreetView(ubicacion, new Dimension(370, 260), gra, 100, -100);
                botonVerStreetView.setIcon(new ImageIcon(imgResultado));

            } catch (Exception e) {
            }

        } else if (op == 3 && cont4 > -1) {
            Ruta ruta = new Ruta("C:\\Users\\USUARIO\\Desktop\\Poyecto Pogra3\\PrograProyecto\\src\\Datos\\ruta4.txt");
            Matriz = ruta.matrizRutas();
            String ubicacion;
            ubicacion = Matriz[cont4 - 1][0] + "," + Matriz[cont4 - 1][1];
            StreetView ObjStreet = new StreetView();
            gra -= 15;
            if (gra < 0) {
                gra = 360;
            }
            try {
                Image imgResultado = ObjStreet.getStreetView(ubicacion, new Dimension(370, 260), gra, 100, -100);
                botonVerStreetView.setIcon(new ImageIcon(imgResultado));

            } catch (Exception e) {
            }

        }
    }//GEN-LAST:event_izActionPerformed

    private void deActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deActionPerformed
        // TODO add your handling code here:
        String Matriz[][];
        int op = jComboBox1.getSelectedIndex();
        if (op == 0 && cont1 > -1) {
            Ruta ruta = new Ruta("C:\\Users\\USUARIO\\Desktop\\Poyecto Pogra3\\PrograProyecto\\src\\Datos\\ruta1.txt");
            Matriz = ruta.matrizRutas();
            String ubicacion;
            ubicacion = Matriz[cont1 - 1][0] + "," + Matriz[cont1 - 1][1];
            StreetView ObjStreet = new StreetView();
            gra += 15;
            if (gra > 360) {
                gra = 0;
            }
            try {
                Image imgResultado = ObjStreet.getStreetView(ubicacion, new Dimension(370, 260), gra, 100, -100);
                botonVerStreetView.setIcon(new ImageIcon(imgResultado));

            } catch (Exception e) {
            }
        } else if (op == 1 && cont2 > -1) {
            Ruta ruta = new Ruta("C:\\Users\\USUARIO\\Desktop\\Poyecto Pogra3\\PrograProyecto\\src\\Datos\\ruta2.txt");
            Matriz = ruta.matrizRutas();
            String ubicacion;
            ubicacion = Matriz[cont2 - 1][0] + "," + Matriz[cont2 - 1][1];
            StreetView ObjStreet = new StreetView();
            gra += 15;
            if (gra > 360) {
                gra = 0;
            }
            try {
                Image imgResultado = ObjStreet.getStreetView(ubicacion, new Dimension(370, 260), gra, 100, -100);
                botonVerStreetView.setIcon(new ImageIcon(imgResultado));

            } catch (Exception e) {
            }
        } else if (op == 2 && cont3 > -1) {
            Ruta ruta = new Ruta("C:\\Users\\USUARIO\\Desktop\\Poyecto Pogra3\\PrograProyecto\\src\\Datos\\ruta3.txt");
            Matriz = ruta.matrizRutas();
            String ubicacion;
            ubicacion = Matriz[cont3 - 1][0] + "," + Matriz[cont3 - 1][1];
            StreetView ObjStreet = new StreetView();
            gra += 15;
            if (gra > 360) {
                gra = 0;
            }
            try {
                Image imgResultado = ObjStreet.getStreetView(ubicacion, new Dimension(370, 260), gra, 100, -100);
                botonVerStreetView.setIcon(new ImageIcon(imgResultado));

            } catch (Exception e) {
            }
        } else if (op == 3 && cont4 > -1) {
            Ruta ruta = new Ruta("C:\\Users\\USUARIO\\Desktop\\Poyecto Pogra3\\PrograProyecto\\src\\Datos\\ruta4.txt");
            Matriz = ruta.matrizRutas();
            String ubicacion;
            ubicacion = Matriz[cont4 - 1][0] + "," + Matriz[cont4 - 1][1];
            StreetView ObjStreet = new StreetView();
            gra += 15;
            if (gra > 360) {
                gra = 0;
            }
            try {
                Image imgResultado = ObjStreet.getStreetView(ubicacion, new Dimension(370, 260), gra, 100, -100);
                botonVerStreetView.setIcon(new ImageIcon(imgResultado));

            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_deActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void botonsalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonsalirActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_botonsalirActionPerformed

    private void BotonRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRutaActionPerformed
        int op = jComboBox1.getSelectedIndex();
        if (op == 0) {
            try {
                // TODO add your handling code here
                URI uri = new URI("https://www.google.es/maps/dir/-2.899509,-79.0063334/Iglesia+de+Todos+Santos/@-2.8993449,-79.0061244,16.25z/data=!4m19!4m18!1m10!3m4!1m2!1d-79.0053098!2d-2.8976951!3s0x91cd18119c682813:0x153c9ba0a5aa34b3!3m4!1m2!1d-78.9980283!2d-2.8989953!3s0x91cd1815e813b993:0x3b53311e6762acda!1m5!1m1!1s0x0:0x8124dd666cc3f2c3!2m2!1d-79.0016475!2d-2.9033544!3e0");
                Desktop.getDesktop().browse(uri);
            } catch (URISyntaxException ex) {
                Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else if (op == 1) {
           try {
                // TODO add your handling code here
                URI uri = new URI("https://www.google.es/maps/dir/-2.8855698,-78.9943064/-2.9119795,-78.9906328/@-2.8971652,-79.0048769,15.31z/data=!4m19!4m18!1m15!3m4!1m2!1d-78.9981269!2d-2.8994946!3s0x91cd1815bdc09c17:0xc3da526e74a4cb8b!3m4!1m2!1d-79.0047873!2d-2.8968261!3s0x91cd1811047aea2b:0x5ede945779b761ae!3m4!1m2!1d-79.0067547!2d-2.9038074!3s0x91cd186d49960aef:0x5e9b807aff7ab2e5!1m0!3e0");
                Desktop.getDesktop().browse(uri);
            } catch (URISyntaxException ex) {
                Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
            } 
                
            
        } else if (op == 2) {
           try {
                // TODO add your handling code here
                URI uri = new URI("https://www.google.es/maps/dir/-2.9025721,-79.0046665/Pumapungo/@-2.9015417,-79.0052431,16.5z/data=!4m14!4m13!1m5!3m4!1m2!1d-79.0091802!2d-2.8989547!3s0x91cd180def700b1d:0xfff7166788091759!1m5!1m1!1s0x0:0xe470b3ef6bb42723!2m2!1d-78.9966509!2d-2.9059541!3e0");
                Desktop.getDesktop().browse(uri);
            } catch (URISyntaxException ex) {
                Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
            }
              
        } else if (op == 3) {
           try {
                // TODO add your handling code here
                URI uri = new URI("https://www.google.es/maps/dir/-2.9050573,-78.9997707/Amaru+Zoológico+Bioparque/@-2.9006359,-79.0010152,14.25z/data=!4m14!4m13!1m5!3m4!1m2!1d-78.9962181!2d-2.9071714!3s0x91cd1841e43516f5:0xb6c00439bec16707!1m5!1m1!1s0x0:0xeaba4154b64349cc!2m2!1d-78.9568305!2d-2.8940094!3e0");
                Desktop.getDesktop().browse(uri);
            } catch (URISyntaxException ex) {
                Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
            }
          try {
                // TODO add your handling code here
                URI uri = new URI("https://www.google.es/maps/dir/Amaru+Zoológico+Bioparque/-2.7832964,-79.2259201/@-2.9098369,-79.2097076,11.5z/data=!4m14!4m13!1m10!1m1!1s0x0:0xeaba4154b64349cc!2m2!1d-78.9568305!2d-2.8940094!3m4!1m2!1d-79.0097698!2d-2.9223588!3s0x91cd187d52c9a89b:0xe71dfb26e9310207!1m0!3e0");
                Desktop.getDesktop().browse(uri);
            } catch (URISyntaxException ex) {
                Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_BotonRutaActionPerformed

    private void BotonVideoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonVideoActionPerformed
        int op  =  jComboBox1.getSelectedIndex();
        int  op2 = 0;
        if (op == 0) {
            op2 = jComboBox2.getSelectedIndex();
            if (op2 == 0) {
            } else if (op2 == 1) {
                  try {
                    URI uri = new URI("https://www.youtube.com/watch?v=CaHiOO-Jf-M");
                    Desktop.getDesktop().browse(uri);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                }
    
            } else if (op2 == 2) {
               try {
                    URI uri = new URI("https://www.youtube.com/watch?v=ryljaRHtZzA");
                    Desktop.getDesktop().browse(uri);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (op2 == 3) {
               try {
                    URI uri = new URI("https://www.youtube.com/watch?v=Ee0fRhgzSGc");
                    Desktop.getDesktop().browse(uri);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            } else if (op2 == 4) {
                try {
                    URI uri = new URI("https://www.youtube.com/watch?v=Jut1glUBZTk");
                    Desktop.getDesktop().browse(uri);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        } else if (op == 1) {
            op2 = jComboBox2.getSelectedIndex();
            
            if (op2 == 0) {
               
            } else if (op2 == 1) {
              try {
                    URI uri = new URI("https://www.youtube.com/watch?v=ZQbwrbhf_mw");
                    Desktop.getDesktop().browse(uri);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                } 
            } else if (op2 == 2) {
               try {
                    URI uri = new URI("https://www.youtube.com/watch?v=cD6rpUA16Yo");
                    Desktop.getDesktop().browse(uri);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (op2 == 3) {
                try {
                    URI uri = new URI("https://www.youtube.com/watch?v=h1r6dfDfTkg");
                    Desktop.getDesktop().browse(uri);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (op2 == 4) {
                try {
                    URI uri = new URI("https://www.youtube.com/watch?v=duEGBPcr7T4");
                    Desktop.getDesktop().browse(uri);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        } else if (op == 2) {
            op2 = jComboBox2.getSelectedIndex();

            if (op2 == 0) {
              
            } else if (op2 == 1) {
                 try {
                    URI uri = new URI("https://www.youtube.com/watch?v=2EDoJxu-NrU");
                    Desktop.getDesktop().browse(uri);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (op2 == 2) {
                 try {
                    URI uri = new URI("https://www.youtube.com/watch?v=7YNqrgaSmPM");
                    Desktop.getDesktop().browse(uri);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (op2 == 3) {
                 try {
                    URI uri = new URI("https://www.youtube.com/watch?v=Psf8O7MpHR0");
                    Desktop.getDesktop().browse(uri);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (op2 == 4) {
               try {
                    URI uri = new URI("https://www.youtube.com/watch?v=D7_PcQQbOzA");
                    Desktop.getDesktop().browse(uri);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        } else if (op == 3) {
            op2 = jComboBox2.getSelectedIndex();

            if (op2 == 0) {
                 try {
                    URI uri = new URI("https://www.youtube.com/watch?v=kjlhxjYvjjQ");
                    Desktop.getDesktop().browse(uri);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (op2 == 1) {
                try {
                    URI uri = new URI("https://www.youtube.com/watch?v=oE0pmocf9dY");
                    Desktop.getDesktop().browse(uri);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (op2 == 2) {
                 try {
                    URI uri = new URI("https://www.youtube.com/watch?v=3aYqD9TmQ3E");
                    Desktop.getDesktop().browse(uri);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (op2 == 3) {
                 try {
                    URI uri = new URI("https://www.youtube.com/watch?v=736Fa1krsSE");
                    Desktop.getDesktop().browse(uri);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (op2 == 4) {
                try {
                    URI uri = new URI("https://www.youtube.com/watch?v=jg7-KnwakSA");
                    Desktop.getDesktop().browse(uri);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(prueba1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }

        if (cont == 5){
        cont=0;
        }        // TODO add your handling code here:
    }//GEN-LAST:event_BotonVideoActionPerformed

    private void ZoomMasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZoomMasActionPerformed
                // TODO add your handling code here:
        if(cont1>0){
        cont1--;
        }
        if(cont2>0){
        cont2--;
        }
        if(cont3>0){
        cont3--;
        }
        if(cont4>0){
        cont4--;
        }
        zoom = zoom+1;
        botonVerMapa.doClick();
        
    }//GEN-LAST:event_ZoomMasActionPerformed

    private void ZoomMenosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZoomMenosActionPerformed
        // TODO add your handling code here:
       
        if(cont1>0){
        cont1--;
        }
        if(cont2>0){
        cont2--;
        }
        if(cont3>0){
        cont3--;
        }
        if(cont4>0){
        cont4--;
        }
        zoom = zoom-1;
        botonVerMapa.doClick();
    }//GEN-LAST:event_ZoomMenosActionPerformed
    public String[] getLugares(String Ruta) {
        String[] Lugares = new String[5];
        if (Ruta.equalsIgnoreCase("Catedrales-Iglesias")) {
            Lugares[0] = "1. Iglesia San Francisco";
            Lugares[1] = "2. Catedral Inmaculada";
            Lugares[2] = "3. Catedral Antigua Cuenca ";
            Lugares[3] = "4. Iglesia San Blas";
            Lugares[4] = "5. Iglesia Todos Los Santos";

        }
        if (Ruta.equalsIgnoreCase("Parques")) {
            Lugares[0] = "1. Parque Miraflores";
            Lugares[1] = "2. Parque San Blas";
            Lugares[2] = "3. Parque Calderon";
            Lugares[3] = "4. Parque de La Madre";
            Lugares[4] = "5. Parque Paraiso";

        }
        if (Ruta.equalsIgnoreCase("Museos")) {
            Lugares[0] = "1. Museo Historia De La Medicina";
            Lugares[1] = "2. Museo Remigio Crespo";
            Lugares[2] = "3. Museo Culturas Aborígenes";
            Lugares[3] = "4. Museo Manuel Augustin";
            Lugares[4] = "5. Museo Pumapungo";
        }
        if (Ruta.equalsIgnoreCase("Especial")) {
            Lugares[0] = "1. Ruina Todos los Santos";
            Lugares[1] = "2. Ruinas de Pumapungo";
            Lugares[2] = "3. Zoológico Amaru";
            Lugares[3] = "4. Mirador Turi";
            Lugares[4] = "5. Parque Nacional Cajas";

        }
        return Lugares;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(prueba1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(prueba1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(prueba1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(prueba1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new prueba1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonAntIm;
    private javax.swing.JButton BotonPuntoAnterior;
    private javax.swing.JButton BotonRuta;
    private javax.swing.JButton BotonSiguienteIm;
    private javax.swing.JButton BotonSiguientePunto;
    private javax.swing.JButton BotonVideo;
    private javax.swing.JButton SimularRecorido;
    private javax.swing.JButton ZoomMas;
    private javax.swing.JButton ZoomMenos;
    private javax.swing.JButton botonVerMapa;
    private javax.swing.JButton botonVerStreetView;
    private javax.swing.JButton botonsalir;
    private javax.swing.JButton de;
    private javax.swing.JLabel fondo1;
    private javax.swing.JLabel fondomapa;
    private javax.swing.JButton iz;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel labelbarra;
    private javax.swing.JToggleButton streetviewtitulo;
    private javax.swing.JToggleButton tittleEscojaRuta;
    private javax.swing.JButton tittleLugar;
    private javax.swing.JToggleButton tittleRuta;
    private javax.swing.JToggleButton tittleRuta1;
    private javax.swing.JLabel visorImagenes;
    // End of variables declaration//GEN-END:variables
}
